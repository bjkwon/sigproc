Terminals unused in grammar

   T_UNKNOWN


State 31 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 60 conflicts: 2 shift/reduce
State 91 conflicts: 1 shift/reduce
State 146 conflicts: 1 shift/reduce
State 185 conflicts: 1 shift/reduce
State 213 conflicts: 11 shift/reduce
State 226 conflicts: 20 shift/reduce
State 268 conflicts: 20 shift/reduce
State 288 conflicts: 20 shift/reduce
State 289 conflicts: 20 shift/reduce


Grammar

    0 $accept: input "end of text"

    1 input: /* empty */
    2      | block_func

    3 block_func: line_func
    4           | block_func line_func

    5 block: line
    6      | block line

    7 line: "end of line"
    8     | error "end of line"
    9     | stmt eol

   10 line_func: line
   11          | funcdef

   12 eol: ','
   13    | ';'
   14    | "end of line"
   15    | "end of text"

   16 func_end: /* empty */
   17         | "endfunction"
   18         | "end of text"

   19 stmt: exp
   20     | assign
   21     | condition
   22     | "if" condition block elseif_list "end"
   23     | "if" condition block elseif_list "else" block "end"
   24     | "switch" exp case_list "end"
   25     | "switch" exp case_list "otherwise" block "end"
   26     | "while" condition block "end"
   27     | "for" "identifier" '=' exp_range block "end"
   28     | "for" "identifier" '=' exp_range ',' block "end"
   29     | "return"
   30     | "break"
   31     | "continue"

   32 funcdef: "function" "identifier" '(' id_list ')' block func_end
   33        | "function" "identifier" '=' "identifier" '(' id_list ')' block func_end
   34        | "function" "identifier" '{' '}' '=' "identifier" '(' id_list ')' block func_end
   35        | "function" '[' vector ']' '=' "identifier" '(' id_list ')' block func_end

   36 elseif_list: /* empty */
   37            | elseif_list "elseif" condition block

   38 case_list: /* empty */
   39          | "end of line"
   40          | case_list "case" exp "end of line" block
   41          | case_list "case" '{' arg_list '}' block

   42 condition: exp '<' exp
   43          | exp '>' exp
   44          | exp "==" exp
   45          | exp "!=" exp
   46          | exp "<=" exp
   47          | exp ">=" exp
   48          | '(' condition ')'
   49          | '~' condition
   50          | condition "&&" condition
   51          | condition "||" condition

   52 id_list: /* empty */
   53        | "identifier"
   54        | "identifier" '{' '}'
   55        | id_list ',' "identifier"
   56        | id_list ',' "identifier" '{' '}'

   57 arg: exp_range
   58    | initcell

   59 arg_list: arg
   60         | arg_list ',' arg

   61 matrix: /* empty */
   62       | vector
   63       | matrix ';' vector

   64 vector: exp_range
   65       | vector exp_range
   66       | vector ',' exp_range

   67 range: exp ':' exp
   68      | exp ':' "endpoint"
   69      | exp ':' exp ':' exp

   70 exp_range: exp
   71          | range

   72 assign: "identifier" '=' exp_range
   73       | "identifier" "+=" exp_range
   74       | "identifier" "-=" exp_range
   75       | "identifier" "*=" exp_range
   76       | "identifier" "/=" exp_range
   77       | "identifier" "@=" exp_range
   78       | "identifier" "@@=" exp_range
   79       | "identifier" '{' exp '}' '=' exp_range
   80       | "identifier" '(' exp '~' exp ')' '=' exp
   81       | "identifier" '(' exp '~' exp ')' "+=" exp_range
   82       | "identifier" '(' exp '~' exp ')' "-=" exp_range
   83       | "identifier" '(' exp '~' exp ')' "*=" exp_range
   84       | "identifier" '(' exp '~' exp ')' "/=" exp_range
   85       | "identifier" '(' exp '~' exp ')' "@=" exp_range
   86       | "identifier" '(' exp '~' exp ')' "@@=" exp_range
   87       | "identifier" '(' arg_list ')' '=' exp_range
   88       | "identifier" '{' exp '}' '(' exp ')' '=' exp_range
   89       | "identifier" '=' assign
   90       | "identifier" '{' exp '}' '=' assign
   91       | "identifier" '(' arg_list ')' '=' assign
   92       | "identifier" '{' exp '}' '(' exp ')' '=' assign
   93       | "identifier" '=' initcell
   94       | "identifier" '{' '}' '=' "identifier" '(' arg_list ')'
   95       | '[' vector ']' '=' "identifier" '(' arg_list ')'

   96 exp: "number"
   97    | "string"
   98    | "identifier"
   99    | "identifier" '{' exp '}'
  100    | "identifier" '{' exp '}' '(' exp ')'
  101    | "identifier" '{' '}'
  102    | "identifier" '(' ')'
  103    | "identifier" '(' arg_list ')'
  104    | '#' "identifier" '(' ')'
  105    | '#' "identifier" '(' arg_list ')'
  106    | "identifier" '(' exp '~' exp ')'
  107    | "identifier" '(' exp '~' "endt" ')'
  108    | "identifier" '(' "endt" '~' exp ')'
  109    | '-' exp
  110    | '+' exp
  111    | '(' exp_range ')'
  112    | "sigma" '(' "identifier" '=' exp_range ',' exp ')'
  113    | exp '+' exp
  114    | exp '-' exp
  115    | exp '*' exp
  116    | exp '/' exp
  117    | exp '^' exp
  118    | exp '%' exp
  119    | exp '$' exp
  120    | exp '@' exp
  121    | exp '@' exp '|' exp
  122    | exp ">>" exp
  123    | exp "<<" exp
  124    | exp "++" exp
  125    | '[' matrix ']'
  126    | '[' vector ']'

  127 initcell: '{' arg_list '}'


Terminals, with rules where they appear

"end of text" (0) 0 15 18
'#' (35) 104 105
'$' (36) 119
'%' (37) 118
'(' (40) 32 33 34 35 48 80 81 82 83 84 85 86 87 88 91 92 94 95 100
    102 103 104 105 106 107 108 111 112
')' (41) 32 33 34 35 48 80 81 82 83 84 85 86 87 88 91 92 94 95 100
    102 103 104 105 106 107 108 111 112
'*' (42) 115
'+' (43) 110 113
',' (44) 12 28 55 56 60 66 112
'-' (45) 109 114
'/' (47) 116
':' (58) 67 68 69
';' (59) 13 63
'<' (60) 42
'=' (61) 27 28 33 34 35 72 79 80 87 88 89 90 91 92 93 94 95 112
'>' (62) 43
'@' (64) 120 121
'[' (91) 35 95 125 126
']' (93) 35 95 125 126
'^' (94) 117
'{' (123) 34 41 54 56 79 88 90 92 94 99 100 101 127
'|' (124) 121
'}' (125) 34 41 54 56 79 88 90 92 94 99 100 101 127
'~' (126) 49 80 81 82 83 84 85 86 106 107 108
error (256) 8
T_UNKNOWN (258)
"end of line" (259) 7 8 14 39 40
"if" (260) 22 23
"else" (261) 23
"elseif" (262) 37
"end" (263) 22 23 24 25 26 27 28
"while" (264) 26
"for" (265) 27 28
"break" (266) 30
"continue" (267) 31
"switch" (268) 24 25
"case" (269) 40 41
"otherwise" (270) 25
"function" (271) 32 33 34 35
"endfunction" (272) 17
"return" (273) 29
"sigma" (274) 112
">>" (275) 122
"<<" (276) 123
"++" (277) 124
"==" (278) 44
"!=" (279) 45
"<=" (280) 46
">=" (281) 47
"&&" (282) 50
"||" (283) 51
"number" (284) 96
"string" (285) 97
"identifier" (286) 27 28 32 33 34 35 53 54 55 56 72 73 74 75 76 77
    78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 98 99 100
    101 102 103 104 105 106 107 108 112
T_NEGATIVE (287)
T_POSITIVE (288)
T_LOGIC_NOT (289)
"endt" (290) 107 108
"endpoint" (291) 68
"+=" (292) 73 81
"-=" (293) 74 82
"*=" (294) 75 83
"/=" (295) 76 84
"@=" (296) 77 85
"@@=" (297) 78 86


Nonterminals, with rules where they appear

$accept (66)
    on left: 0
input (67)
    on left: 1 2, on right: 0
block_func (68)
    on left: 3 4, on right: 2 4
block (69)
    on left: 5 6, on right: 6 22 23 25 26 27 28 32 33 34 35 37 40 41
line (70)
    on left: 7 8 9, on right: 5 6 10
line_func (71)
    on left: 10 11, on right: 3 4
eol (72)
    on left: 12 13 14 15, on right: 9
func_end (73)
    on left: 16 17 18, on right: 32 33 34 35
stmt (74)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30 31, on right: 9
funcdef (75)
    on left: 32 33 34 35, on right: 11
elseif_list (76)
    on left: 36 37, on right: 22 23 37
case_list (77)
    on left: 38 39 40 41, on right: 24 25 40 41
condition (78)
    on left: 42 43 44 45 46 47 48 49 50 51, on right: 21 22 23 26 37
    48 49 50 51
id_list (79)
    on left: 52 53 54 55 56, on right: 32 33 34 35 55 56
arg (80)
    on left: 57 58, on right: 59 60
arg_list (81)
    on left: 59 60, on right: 41 60 87 91 94 95 103 105 127
matrix (82)
    on left: 61 62 63, on right: 63 125
vector (83)
    on left: 64 65 66, on right: 35 62 63 65 66 95 126
range (84)
    on left: 67 68 69, on right: 71
exp_range (85)
    on left: 70 71, on right: 27 28 57 64 65 66 72 73 74 75 76 77 78
    79 81 82 83 84 85 86 87 88 111 112
assign (86)
    on left: 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
    90 91 92 93 94 95, on right: 20 89 90 91 92
exp (87)
    on left: 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110
    111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126,
    on right: 19 24 25 40 42 43 44 45 46 47 67 68 69 70 79 80 81 82
    83 84 85 86 88 90 92 99 100 106 107 108 109 110 112 113 114 115
    116 117 118 119 120 121 122 123 124
initcell (88)
    on left: 127, on right: 58 93


state 0

    0 $accept: . input "end of text"

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "function"     shift, and go to state 9
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    "end of text"  reduce using rule 1 (input)

    input       go to state 21
    block_func  go to state 22
    line        go to state 23
    line_func   go to state 24
    stmt        go to state 25
    funcdef     go to state 26
    condition   go to state 27
    assign      go to state 28
    exp         go to state 29


state 1

    8 line: error . "end of line"

    "end of line"  shift, and go to state 30


state 2

    7 line: "end of line" .

    $default  reduce using rule 7 (line)


state 3

   22 stmt: "if" . condition block elseif_list "end"
   23     | "if" . condition block elseif_list "else" block "end"

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 17
    '['           shift, and go to state 32
    '~'           shift, and go to state 19
    '#'           shift, and go to state 20

    condition  go to state 33
    exp        go to state 34


state 4

   26 stmt: "while" . condition block "end"

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 17
    '['           shift, and go to state 32
    '~'           shift, and go to state 19
    '#'           shift, and go to state 20

    condition  go to state 35
    exp        go to state 34


state 5

   27 stmt: "for" . "identifier" '=' exp_range block "end"
   28     | "for" . "identifier" '=' exp_range ',' block "end"

    "identifier"  shift, and go to state 36


state 6

   30 stmt: "break" .

    $default  reduce using rule 30 (stmt)


state 7

   31 stmt: "continue" .

    $default  reduce using rule 31 (stmt)


state 8

   24 stmt: "switch" . exp case_list "end"
   25     | "switch" . exp case_list "otherwise" block "end"

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 38


state 9

   32 funcdef: "function" . "identifier" '(' id_list ')' block func_end
   33        | "function" . "identifier" '=' "identifier" '(' id_list ')' block func_end
   34        | "function" . "identifier" '{' '}' '=' "identifier" '(' id_list ')' block func_end
   35        | "function" . '[' vector ']' '=' "identifier" '(' id_list ')' block func_end

    "identifier"  shift, and go to state 39
    '['           shift, and go to state 40


state 10

   29 stmt: "return" .

    $default  reduce using rule 29 (stmt)


state 11

  112 exp: "sigma" . '(' "identifier" '=' exp_range ',' exp ')'

    '('  shift, and go to state 41


state 12

   96 exp: "number" .

    $default  reduce using rule 96 (exp)


state 13

   97 exp: "string" .

    $default  reduce using rule 97 (exp)


state 14

   72 assign: "identifier" . '=' exp_range
   73       | "identifier" . "+=" exp_range
   74       | "identifier" . "-=" exp_range
   75       | "identifier" . "*=" exp_range
   76       | "identifier" . "/=" exp_range
   77       | "identifier" . "@=" exp_range
   78       | "identifier" . "@@=" exp_range
   79       | "identifier" . '{' exp '}' '=' exp_range
   80       | "identifier" . '(' exp '~' exp ')' '=' exp
   81       | "identifier" . '(' exp '~' exp ')' "+=" exp_range
   82       | "identifier" . '(' exp '~' exp ')' "-=" exp_range
   83       | "identifier" . '(' exp '~' exp ')' "*=" exp_range
   84       | "identifier" . '(' exp '~' exp ')' "/=" exp_range
   85       | "identifier" . '(' exp '~' exp ')' "@=" exp_range
   86       | "identifier" . '(' exp '~' exp ')' "@@=" exp_range
   87       | "identifier" . '(' arg_list ')' '=' exp_range
   88       | "identifier" . '{' exp '}' '(' exp ')' '=' exp_range
   89       | "identifier" . '=' assign
   90       | "identifier" . '{' exp '}' '=' assign
   91       | "identifier" . '(' arg_list ')' '=' assign
   92       | "identifier" . '{' exp '}' '(' exp ')' '=' assign
   93       | "identifier" . '=' initcell
   94       | "identifier" . '{' '}' '=' "identifier" '(' arg_list ')'
   98 exp: "identifier" .
   99    | "identifier" . '{' exp '}'
  100    | "identifier" . '{' exp '}' '(' exp ')'
  101    | "identifier" . '{' '}'
  102    | "identifier" . '(' ')'
  103    | "identifier" . '(' arg_list ')'
  106    | "identifier" . '(' exp '~' exp ')'
  107    | "identifier" . '(' exp '~' "endt" ')'
  108    | "identifier" . '(' "endt" '~' exp ')'

    '='    shift, and go to state 42
    '('    shift, and go to state 43
    '{'    shift, and go to state 44
    "+="   shift, and go to state 45
    "-="   shift, and go to state 46
    "*="   shift, and go to state 47
    "/="   shift, and go to state 48
    "@="   shift, and go to state 49
    "@@="  shift, and go to state 50

    $default  reduce using rule 98 (exp)


state 15

  109 exp: '-' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 51


state 16

  110 exp: '+' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 52


state 17

   48 condition: '(' . condition ')'
  111 exp: '(' . exp_range ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 17
    '['           shift, and go to state 32
    '~'           shift, and go to state 19
    '#'           shift, and go to state 20

    condition  go to state 53
    range      go to state 54
    exp_range  go to state 55
    exp        go to state 56


state 18

   95 assign: '[' . vector ']' '=' "identifier" '(' arg_list ')'
  125 exp: '[' . matrix ']'
  126    | '[' . vector ']'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    $default  reduce using rule 61 (matrix)

    matrix     go to state 57
    vector     go to state 58
    range      go to state 54
    exp_range  go to state 59
    exp        go to state 60


state 19

   49 condition: '~' . condition

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 17
    '['           shift, and go to state 32
    '~'           shift, and go to state 19
    '#'           shift, and go to state 20

    condition  go to state 61
    exp        go to state 34


state 20

  104 exp: '#' . "identifier" '(' ')'
  105    | '#' . "identifier" '(' arg_list ')'

    "identifier"  shift, and go to state 62


state 21

    0 $accept: input . "end of text"

    "end of text"  shift, and go to state 63


state 22

    2 input: block_func .
    4 block_func: block_func . line_func

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "function"     shift, and go to state 9
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    "end of text"  reduce using rule 2 (input)

    line       go to state 23
    line_func  go to state 64
    stmt       go to state 25
    funcdef    go to state 26
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 23

   10 line_func: line .

    $default  reduce using rule 10 (line_func)


state 24

    3 block_func: line_func .

    $default  reduce using rule 3 (block_func)


state 25

    9 line: stmt . eol

    "end of text"  shift, and go to state 65
    "end of line"  shift, and go to state 66
    ','            shift, and go to state 67
    ';'            shift, and go to state 68

    eol  go to state 69


state 26

   11 line_func: funcdef .

    $default  reduce using rule 11 (line_func)


state 27

   21 stmt: condition .
   50 condition: condition . "&&" condition
   51          | condition . "||" condition

    "&&"  shift, and go to state 70
    "||"  shift, and go to state 71

    $default  reduce using rule 21 (stmt)


state 28

   20 stmt: assign .

    $default  reduce using rule 20 (stmt)


state 29

   19 stmt: exp .
   42 condition: exp . '<' exp
   43          | exp . '>' exp
   44          | exp . "==" exp
   45          | exp . "!=" exp
   46          | exp . "<=" exp
   47          | exp . ">=" exp
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    "=="  shift, and go to state 75
    "!="  shift, and go to state 76
    "<="  shift, and go to state 77
    ">="  shift, and go to state 78
    '<'   shift, and go to state 79
    '>'   shift, and go to state 80
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 19 (stmt)


state 30

    8 line: error "end of line" .

    $default  reduce using rule 8 (line)


state 31

   98 exp: "identifier" .
   99    | "identifier" . '{' exp '}'
  100    | "identifier" . '{' exp '}' '(' exp ')'
  101    | "identifier" . '{' '}'
  102    | "identifier" . '(' ')'
  103    | "identifier" . '(' arg_list ')'
  106    | "identifier" . '(' exp '~' exp ')'
  107    | "identifier" . '(' exp '~' "endt" ')'
  108    | "identifier" . '(' "endt" '~' exp ')'

    '('  shift, and go to state 89
    '{'  shift, and go to state 90

    '('       [reduce using rule 98 (exp)]
    $default  reduce using rule 98 (exp)


state 32

  125 exp: '[' . matrix ']'
  126    | '[' . vector ']'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    $default  reduce using rule 61 (matrix)

    matrix     go to state 57
    vector     go to state 91
    range      go to state 54
    exp_range  go to state 59
    exp        go to state 60


state 33

   22 stmt: "if" condition . block elseif_list "end"
   23     | "if" condition . block elseif_list "else" block "end"
   50 condition: condition . "&&" condition
   51          | condition . "||" condition

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "&&"           shift, and go to state 70
    "||"           shift, and go to state 71
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    block      go to state 92
    line       go to state 93
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 34

   42 condition: exp . '<' exp
   43          | exp . '>' exp
   44          | exp . "==" exp
   45          | exp . "!=" exp
   46          | exp . "<=" exp
   47          | exp . ">=" exp
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    "=="  shift, and go to state 75
    "!="  shift, and go to state 76
    "<="  shift, and go to state 77
    ">="  shift, and go to state 78
    '<'   shift, and go to state 79
    '>'   shift, and go to state 80
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88


state 35

   26 stmt: "while" condition . block "end"
   50 condition: condition . "&&" condition
   51          | condition . "||" condition

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "&&"           shift, and go to state 70
    "||"           shift, and go to state 71
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    block      go to state 94
    line       go to state 93
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 36

   27 stmt: "for" "identifier" . '=' exp_range block "end"
   28     | "for" "identifier" . '=' exp_range ',' block "end"

    '='  shift, and go to state 95


state 37

  111 exp: '(' . exp_range ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 55
    exp        go to state 60


state 38

   24 stmt: "switch" exp . case_list "end"
   25     | "switch" exp . case_list "otherwise" block "end"
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    "end of line"  shift, and go to state 96
    ">>"           shift, and go to state 72
    "<<"           shift, and go to state 73
    "++"           shift, and go to state 74
    '-'            shift, and go to state 81
    '+'            shift, and go to state 82
    '$'            shift, and go to state 83
    '%'            shift, and go to state 84
    '@'            shift, and go to state 85
    '*'            shift, and go to state 86
    '/'            shift, and go to state 87
    '^'            shift, and go to state 88

    $default  reduce using rule 38 (case_list)

    case_list  go to state 97


state 39

   32 funcdef: "function" "identifier" . '(' id_list ')' block func_end
   33        | "function" "identifier" . '=' "identifier" '(' id_list ')' block func_end
   34        | "function" "identifier" . '{' '}' '=' "identifier" '(' id_list ')' block func_end

    '='  shift, and go to state 98
    '('  shift, and go to state 99
    '{'  shift, and go to state 100


state 40

   35 funcdef: "function" '[' . vector ']' '=' "identifier" '(' id_list ')' block func_end

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    vector     go to state 101
    range      go to state 54
    exp_range  go to state 59
    exp        go to state 60


state 41

  112 exp: "sigma" '(' . "identifier" '=' exp_range ',' exp ')'

    "identifier"  shift, and go to state 102


state 42

   72 assign: "identifier" '=' . exp_range
   89       | "identifier" '=' . assign
   93       | "identifier" '=' . initcell

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 14
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '{'           shift, and go to state 103
    '['           shift, and go to state 18
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 104
    assign     go to state 105
    exp        go to state 60
    initcell   go to state 106


state 43

   80 assign: "identifier" '(' . exp '~' exp ')' '=' exp
   81       | "identifier" '(' . exp '~' exp ')' "+=" exp_range
   82       | "identifier" '(' . exp '~' exp ')' "-=" exp_range
   83       | "identifier" '(' . exp '~' exp ')' "*=" exp_range
   84       | "identifier" '(' . exp '~' exp ')' "/=" exp_range
   85       | "identifier" '(' . exp '~' exp ')' "@=" exp_range
   86       | "identifier" '(' . exp '~' exp ')' "@@=" exp_range
   87       | "identifier" '(' . arg_list ')' '=' exp_range
   91       | "identifier" '(' . arg_list ')' '=' assign
  102 exp: "identifier" '(' . ')'
  103    | "identifier" '(' . arg_list ')'
  106    | "identifier" '(' . exp '~' exp ')'
  107    | "identifier" '(' . exp '~' "endt" ')'
  108    | "identifier" '(' . "endt" '~' exp ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    "endt"        shift, and go to state 107
    '('           shift, and go to state 37
    ')'           shift, and go to state 108
    '{'           shift, and go to state 103
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    arg        go to state 109
    arg_list   go to state 110
    range      go to state 54
    exp_range  go to state 111
    exp        go to state 112
    initcell   go to state 113


state 44

   79 assign: "identifier" '{' . exp '}' '=' exp_range
   88       | "identifier" '{' . exp '}' '(' exp ')' '=' exp_range
   90       | "identifier" '{' . exp '}' '=' assign
   92       | "identifier" '{' . exp '}' '(' exp ')' '=' assign
   94       | "identifier" '{' . '}' '=' "identifier" '(' arg_list ')'
   99 exp: "identifier" '{' . exp '}'
  100    | "identifier" '{' . exp '}' '(' exp ')'
  101    | "identifier" '{' . '}'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '}'           shift, and go to state 114
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 115


state 45

   73 assign: "identifier" "+=" . exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 116
    exp        go to state 60


state 46

   74 assign: "identifier" "-=" . exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 117
    exp        go to state 60


state 47

   75 assign: "identifier" "*=" . exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 118
    exp        go to state 60


state 48

   76 assign: "identifier" "/=" . exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 119
    exp        go to state 60


state 49

   77 assign: "identifier" "@=" . exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 120
    exp        go to state 60


state 50

   78 assign: "identifier" "@@=" . exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 121
    exp        go to state 60


state 51

  109 exp: '-' exp .
  113    | exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    $default  reduce using rule 109 (exp)


state 52

  110 exp: '+' exp .
  113    | exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    $default  reduce using rule 110 (exp)


state 53

   48 condition: '(' condition . ')'
   50          | condition . "&&" condition
   51          | condition . "||" condition

    "&&"  shift, and go to state 70
    "||"  shift, and go to state 71
    ')'   shift, and go to state 122


state 54

   71 exp_range: range .

    $default  reduce using rule 71 (exp_range)


state 55

  111 exp: '(' exp_range . ')'

    ')'  shift, and go to state 123


state 56

   42 condition: exp . '<' exp
   43          | exp . '>' exp
   44          | exp . "==" exp
   45          | exp . "!=" exp
   46          | exp . "<=" exp
   47          | exp . ">=" exp
   67 range: exp . ':' exp
   68      | exp . ':' "endpoint"
   69      | exp . ':' exp ':' exp
   70 exp_range: exp .
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    "=="  shift, and go to state 75
    "!="  shift, and go to state 76
    "<="  shift, and go to state 77
    ">="  shift, and go to state 78
    '<'   shift, and go to state 79
    '>'   shift, and go to state 80
    ':'   shift, and go to state 124
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 70 (exp_range)


state 57

   63 matrix: matrix . ';' vector
  125 exp: '[' matrix . ']'

    ';'  shift, and go to state 125
    ']'  shift, and go to state 126


state 58

   62 matrix: vector .
   65 vector: vector . exp_range
   66       | vector . ',' exp_range
   95 assign: '[' vector . ']' '=' "identifier" '(' arg_list ')'
  126 exp: '[' vector . ']'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    ','           shift, and go to state 127
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    ']'           shift, and go to state 128
    '#'           shift, and go to state 20

    ']'       [reduce using rule 62 (matrix)]
    $default  reduce using rule 62 (matrix)

    range      go to state 54
    exp_range  go to state 129
    exp        go to state 60


state 59

   64 vector: exp_range .

    $default  reduce using rule 64 (vector)


state 60

   67 range: exp . ':' exp
   68      | exp . ':' "endpoint"
   69      | exp . ':' exp ':' exp
   70 exp_range: exp .
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    ':'   shift, and go to state 124
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    '-'       [reduce using rule 70 (exp_range)]
    '+'       [reduce using rule 70 (exp_range)]
    $default  reduce using rule 70 (exp_range)


state 61

   49 condition: '~' condition .
   50          | condition . "&&" condition
   51          | condition . "||" condition

    $default  reduce using rule 49 (condition)


state 62

  104 exp: '#' "identifier" . '(' ')'
  105    | '#' "identifier" . '(' arg_list ')'

    '('  shift, and go to state 130


state 63

    0 $accept: input "end of text" .

    $default  accept


state 64

    4 block_func: block_func line_func .

    $default  reduce using rule 4 (block_func)


state 65

   15 eol: "end of text" .

    $default  reduce using rule 15 (eol)


state 66

   14 eol: "end of line" .

    $default  reduce using rule 14 (eol)


state 67

   12 eol: ',' .

    $default  reduce using rule 12 (eol)


state 68

   13 eol: ';' .

    $default  reduce using rule 13 (eol)


state 69

    9 line: stmt eol .

    $default  reduce using rule 9 (line)


state 70

   50 condition: condition "&&" . condition

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 17
    '['           shift, and go to state 32
    '~'           shift, and go to state 19
    '#'           shift, and go to state 20

    condition  go to state 131
    exp        go to state 34


state 71

   51 condition: condition "||" . condition

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 17
    '['           shift, and go to state 32
    '~'           shift, and go to state 19
    '#'           shift, and go to state 20

    condition  go to state 132
    exp        go to state 34


state 72

  122 exp: exp ">>" . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 133


state 73

  123 exp: exp "<<" . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 134


state 74

  124 exp: exp "++" . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 135


state 75

   44 condition: exp "==" . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 136


state 76

   45 condition: exp "!=" . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 137


state 77

   46 condition: exp "<=" . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 138


state 78

   47 condition: exp ">=" . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 139


state 79

   42 condition: exp '<' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 140


state 80

   43 condition: exp '>' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 141


state 81

  114 exp: exp '-' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 142


state 82

  113 exp: exp '+' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 143


state 83

  119 exp: exp '$' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 144


state 84

  118 exp: exp '%' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 145


state 85

  120 exp: exp '@' . exp
  121    | exp '@' . exp '|' exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 146


state 86

  115 exp: exp '*' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 147


state 87

  116 exp: exp '/' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 148


state 88

  117 exp: exp '^' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 149


state 89

  102 exp: "identifier" '(' . ')'
  103    | "identifier" '(' . arg_list ')'
  106    | "identifier" '(' . exp '~' exp ')'
  107    | "identifier" '(' . exp '~' "endt" ')'
  108    | "identifier" '(' . "endt" '~' exp ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    "endt"        shift, and go to state 107
    '('           shift, and go to state 37
    ')'           shift, and go to state 108
    '{'           shift, and go to state 103
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    arg        go to state 109
    arg_list   go to state 150
    range      go to state 54
    exp_range  go to state 111
    exp        go to state 151
    initcell   go to state 113


state 90

   99 exp: "identifier" '{' . exp '}'
  100    | "identifier" '{' . exp '}' '(' exp ')'
  101    | "identifier" '{' . '}'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '}'           shift, and go to state 152
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 153


state 91

   62 matrix: vector .
   65 vector: vector . exp_range
   66       | vector . ',' exp_range
  126 exp: '[' vector . ']'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    ','           shift, and go to state 127
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    ']'           shift, and go to state 154
    '#'           shift, and go to state 20

    ']'       [reduce using rule 62 (matrix)]
    $default  reduce using rule 62 (matrix)

    range      go to state 54
    exp_range  go to state 129
    exp        go to state 60


state 92

    6 block: block . line
   22 stmt: "if" condition block . elseif_list "end"
   23     | "if" condition block . elseif_list "else" block "end"

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    "else"    reduce using rule 36 (elseif_list)
    "elseif"  reduce using rule 36 (elseif_list)
    "end"     reduce using rule 36 (elseif_list)

    line         go to state 155
    stmt         go to state 25
    elseif_list  go to state 156
    condition    go to state 27
    assign       go to state 28
    exp          go to state 29


state 93

    5 block: line .

    $default  reduce using rule 5 (block)


state 94

    6 block: block . line
   26 stmt: "while" condition block . "end"

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "end"          shift, and go to state 157
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    line       go to state 155
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 95

   27 stmt: "for" "identifier" '=' . exp_range block "end"
   28     | "for" "identifier" '=' . exp_range ',' block "end"

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 158
    exp        go to state 60


state 96

   39 case_list: "end of line" .

    $default  reduce using rule 39 (case_list)


state 97

   24 stmt: "switch" exp case_list . "end"
   25     | "switch" exp case_list . "otherwise" block "end"
   40 case_list: case_list . "case" exp "end of line" block
   41          | case_list . "case" '{' arg_list '}' block

    "end"        shift, and go to state 159
    "case"       shift, and go to state 160
    "otherwise"  shift, and go to state 161


state 98

   33 funcdef: "function" "identifier" '=' . "identifier" '(' id_list ')' block func_end

    "identifier"  shift, and go to state 162


state 99

   32 funcdef: "function" "identifier" '(' . id_list ')' block func_end

    "identifier"  shift, and go to state 163

    $default  reduce using rule 52 (id_list)

    id_list  go to state 164


state 100

   34 funcdef: "function" "identifier" '{' . '}' '=' "identifier" '(' id_list ')' block func_end

    '}'  shift, and go to state 165


state 101

   35 funcdef: "function" '[' vector . ']' '=' "identifier" '(' id_list ')' block func_end
   65 vector: vector . exp_range
   66       | vector . ',' exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    ','           shift, and go to state 127
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    ']'           shift, and go to state 166
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 129
    exp        go to state 60


state 102

  112 exp: "sigma" '(' "identifier" . '=' exp_range ',' exp ')'

    '='  shift, and go to state 167


state 103

  127 initcell: '{' . arg_list '}'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '{'           shift, and go to state 103
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    arg        go to state 109
    arg_list   go to state 168
    range      go to state 54
    exp_range  go to state 111
    exp        go to state 60
    initcell   go to state 113


state 104

   72 assign: "identifier" '=' exp_range .

    $default  reduce using rule 72 (assign)


state 105

   89 assign: "identifier" '=' assign .

    $default  reduce using rule 89 (assign)


state 106

   93 assign: "identifier" '=' initcell .

    $default  reduce using rule 93 (assign)


state 107

  108 exp: "identifier" '(' "endt" . '~' exp ')'

    '~'  shift, and go to state 169


state 108

  102 exp: "identifier" '(' ')' .

    $default  reduce using rule 102 (exp)


state 109

   59 arg_list: arg .

    $default  reduce using rule 59 (arg_list)


state 110

   60 arg_list: arg_list . ',' arg
   87 assign: "identifier" '(' arg_list . ')' '=' exp_range
   91       | "identifier" '(' arg_list . ')' '=' assign
  103 exp: "identifier" '(' arg_list . ')'

    ','  shift, and go to state 170
    ')'  shift, and go to state 171


state 111

   57 arg: exp_range .

    $default  reduce using rule 57 (arg)


state 112

   67 range: exp . ':' exp
   68      | exp . ':' "endpoint"
   69      | exp . ':' exp ':' exp
   70 exp_range: exp .
   80 assign: "identifier" '(' exp . '~' exp ')' '=' exp
   81       | "identifier" '(' exp . '~' exp ')' "+=" exp_range
   82       | "identifier" '(' exp . '~' exp ')' "-=" exp_range
   83       | "identifier" '(' exp . '~' exp ')' "*=" exp_range
   84       | "identifier" '(' exp . '~' exp ')' "/=" exp_range
   85       | "identifier" '(' exp . '~' exp ')' "@=" exp_range
   86       | "identifier" '(' exp . '~' exp ')' "@@=" exp_range
  106 exp: "identifier" '(' exp . '~' exp ')'
  107    | "identifier" '(' exp . '~' "endt" ')'
  113    | exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    ':'   shift, and go to state 124
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88
    '~'   shift, and go to state 172

    $default  reduce using rule 70 (exp_range)


state 113

   58 arg: initcell .

    $default  reduce using rule 58 (arg)


state 114

   94 assign: "identifier" '{' '}' . '=' "identifier" '(' arg_list ')'
  101 exp: "identifier" '{' '}' .

    '='  shift, and go to state 173

    $default  reduce using rule 101 (exp)


state 115

   79 assign: "identifier" '{' exp . '}' '=' exp_range
   88       | "identifier" '{' exp . '}' '(' exp ')' '=' exp_range
   90       | "identifier" '{' exp . '}' '=' assign
   92       | "identifier" '{' exp . '}' '(' exp ')' '=' assign
   99 exp: "identifier" '{' exp . '}'
  100    | "identifier" '{' exp . '}' '(' exp ')'
  113    | exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88
    '}'   shift, and go to state 174


state 116

   73 assign: "identifier" "+=" exp_range .

    $default  reduce using rule 73 (assign)


state 117

   74 assign: "identifier" "-=" exp_range .

    $default  reduce using rule 74 (assign)


state 118

   75 assign: "identifier" "*=" exp_range .

    $default  reduce using rule 75 (assign)


state 119

   76 assign: "identifier" "/=" exp_range .

    $default  reduce using rule 76 (assign)


state 120

   77 assign: "identifier" "@=" exp_range .

    $default  reduce using rule 77 (assign)


state 121

   78 assign: "identifier" "@@=" exp_range .

    $default  reduce using rule 78 (assign)


state 122

   48 condition: '(' condition ')' .

    $default  reduce using rule 48 (condition)


state 123

  111 exp: '(' exp_range ')' .

    $default  reduce using rule 111 (exp)


state 124

   67 range: exp ':' . exp
   68      | exp ':' . "endpoint"
   69      | exp ':' . exp ':' exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    "endpoint"    shift, and go to state 175
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 176


state 125

   63 matrix: matrix ';' . vector

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    vector     go to state 177
    range      go to state 54
    exp_range  go to state 59
    exp        go to state 60


state 126

  125 exp: '[' matrix ']' .

    $default  reduce using rule 125 (exp)


state 127

   66 vector: vector ',' . exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 178
    exp        go to state 60


state 128

   95 assign: '[' vector ']' . '=' "identifier" '(' arg_list ')'
  126 exp: '[' vector ']' .

    '='  shift, and go to state 179

    $default  reduce using rule 126 (exp)


state 129

   65 vector: vector exp_range .

    $default  reduce using rule 65 (vector)


state 130

  104 exp: '#' "identifier" '(' . ')'
  105    | '#' "identifier" '(' . arg_list ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    ')'           shift, and go to state 180
    '{'           shift, and go to state 103
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    arg        go to state 109
    arg_list   go to state 181
    range      go to state 54
    exp_range  go to state 111
    exp        go to state 60
    initcell   go to state 113


state 131

   50 condition: condition . "&&" condition
   50          | condition "&&" condition .
   51          | condition . "||" condition

    $default  reduce using rule 50 (condition)


state 132

   50 condition: condition . "&&" condition
   51          | condition . "||" condition
   51          | condition "||" condition .

    "&&"  shift, and go to state 70

    $default  reduce using rule 51 (condition)


state 133

  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  122    | exp ">>" exp .
  123    | exp . "<<" exp
  124    | exp . "++" exp

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '^'  shift, and go to state 88

    $default  reduce using rule 122 (exp)


state 134

  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  123    | exp "<<" exp .
  124    | exp . "++" exp

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '^'  shift, and go to state 88

    $default  reduce using rule 123 (exp)


state 135

  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp
  124    | exp "++" exp .

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 124 (exp)


state 136

   44 condition: exp "==" exp .
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 44 (condition)


state 137

   45 condition: exp "!=" exp .
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 45 (condition)


state 138

   46 condition: exp "<=" exp .
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 46 (condition)


state 139

   47 condition: exp ">=" exp .
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 47 (condition)


state 140

   42 condition: exp '<' exp .
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 42 (condition)


state 141

   43 condition: exp '>' exp .
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 43 (condition)


state 142

  113 exp: exp . '+' exp
  114    | exp . '-' exp
  114    | exp '-' exp .
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 114 (exp)


state 143

  113 exp: exp . '+' exp
  113    | exp '+' exp .
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 113 (exp)


state 144

  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  119    | exp '$' exp .
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '^'  shift, and go to state 88

    $default  reduce using rule 119 (exp)


state 145

  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  118    | exp '%' exp .
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '^'  shift, and go to state 88

    $default  reduce using rule 118 (exp)


state 146

  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  120    | exp '@' exp .
  121    | exp . '@' exp '|' exp
  121    | exp '@' exp . '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '^'  shift, and go to state 88
    '|'  shift, and go to state 182

    '|'       [reduce using rule 120 (exp)]
    $default  reduce using rule 120 (exp)


state 147

  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  115    | exp '*' exp .
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    '^'  shift, and go to state 88

    $default  reduce using rule 115 (exp)


state 148

  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  116    | exp '/' exp .
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    '^'  shift, and go to state 88

    $default  reduce using rule 116 (exp)


state 149

  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  117    | exp '^' exp .
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    '^'  shift, and go to state 88

    $default  reduce using rule 117 (exp)


state 150

   60 arg_list: arg_list . ',' arg
  103 exp: "identifier" '(' arg_list . ')'

    ','  shift, and go to state 170
    ')'  shift, and go to state 183


state 151

   67 range: exp . ':' exp
   68      | exp . ':' "endpoint"
   69      | exp . ':' exp ':' exp
   70 exp_range: exp .
  106 exp: "identifier" '(' exp . '~' exp ')'
  107    | "identifier" '(' exp . '~' "endt" ')'
  113    | exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    ':'   shift, and go to state 124
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88
    '~'   shift, and go to state 184

    $default  reduce using rule 70 (exp_range)


state 152

  101 exp: "identifier" '{' '}' .

    $default  reduce using rule 101 (exp)


state 153

   99 exp: "identifier" '{' exp . '}'
  100    | "identifier" '{' exp . '}' '(' exp ')'
  113    | exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88
    '}'   shift, and go to state 185


state 154

  126 exp: '[' vector ']' .

    $default  reduce using rule 126 (exp)


state 155

    6 block: block line .

    $default  reduce using rule 6 (block)


state 156

   22 stmt: "if" condition block elseif_list . "end"
   23     | "if" condition block elseif_list . "else" block "end"
   37 elseif_list: elseif_list . "elseif" condition block

    "else"    shift, and go to state 186
    "elseif"  shift, and go to state 187
    "end"     shift, and go to state 188


state 157

   26 stmt: "while" condition block "end" .

    $default  reduce using rule 26 (stmt)


state 158

   27 stmt: "for" "identifier" '=' exp_range . block "end"
   28     | "for" "identifier" '=' exp_range . ',' block "end"

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    ','            shift, and go to state 189
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    block      go to state 190
    line       go to state 93
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 159

   24 stmt: "switch" exp case_list "end" .

    $default  reduce using rule 24 (stmt)


state 160

   40 case_list: case_list "case" . exp "end of line" block
   41          | case_list "case" . '{' arg_list '}' block

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '{'           shift, and go to state 191
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 192


state 161

   25 stmt: "switch" exp case_list "otherwise" . block "end"

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    block      go to state 193
    line       go to state 93
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 162

   33 funcdef: "function" "identifier" '=' "identifier" . '(' id_list ')' block func_end

    '('  shift, and go to state 194


state 163

   53 id_list: "identifier" .
   54        | "identifier" . '{' '}'

    '{'  shift, and go to state 195

    $default  reduce using rule 53 (id_list)


state 164

   32 funcdef: "function" "identifier" '(' id_list . ')' block func_end
   55 id_list: id_list . ',' "identifier"
   56        | id_list . ',' "identifier" '{' '}'

    ','  shift, and go to state 196
    ')'  shift, and go to state 197


state 165

   34 funcdef: "function" "identifier" '{' '}' . '=' "identifier" '(' id_list ')' block func_end

    '='  shift, and go to state 198


state 166

   35 funcdef: "function" '[' vector ']' . '=' "identifier" '(' id_list ')' block func_end

    '='  shift, and go to state 199


state 167

  112 exp: "sigma" '(' "identifier" '=' . exp_range ',' exp ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 200
    exp        go to state 60


state 168

   60 arg_list: arg_list . ',' arg
  127 initcell: '{' arg_list . '}'

    ','  shift, and go to state 170
    '}'  shift, and go to state 201


state 169

  108 exp: "identifier" '(' "endt" '~' . exp ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 202


state 170

   60 arg_list: arg_list ',' . arg

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '{'           shift, and go to state 103
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    arg        go to state 203
    range      go to state 54
    exp_range  go to state 111
    exp        go to state 60
    initcell   go to state 113


state 171

   87 assign: "identifier" '(' arg_list ')' . '=' exp_range
   91       | "identifier" '(' arg_list ')' . '=' assign
  103 exp: "identifier" '(' arg_list ')' .

    '='  shift, and go to state 204

    $default  reduce using rule 103 (exp)


state 172

   80 assign: "identifier" '(' exp '~' . exp ')' '=' exp
   81       | "identifier" '(' exp '~' . exp ')' "+=" exp_range
   82       | "identifier" '(' exp '~' . exp ')' "-=" exp_range
   83       | "identifier" '(' exp '~' . exp ')' "*=" exp_range
   84       | "identifier" '(' exp '~' . exp ')' "/=" exp_range
   85       | "identifier" '(' exp '~' . exp ')' "@=" exp_range
   86       | "identifier" '(' exp '~' . exp ')' "@@=" exp_range
  106 exp: "identifier" '(' exp '~' . exp ')'
  107    | "identifier" '(' exp '~' . "endt" ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    "endt"        shift, and go to state 205
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 206


state 173

   94 assign: "identifier" '{' '}' '=' . "identifier" '(' arg_list ')'

    "identifier"  shift, and go to state 207


state 174

   79 assign: "identifier" '{' exp '}' . '=' exp_range
   88       | "identifier" '{' exp '}' . '(' exp ')' '=' exp_range
   90       | "identifier" '{' exp '}' . '=' assign
   92       | "identifier" '{' exp '}' . '(' exp ')' '=' assign
   99 exp: "identifier" '{' exp '}' .
  100    | "identifier" '{' exp '}' . '(' exp ')'

    '='  shift, and go to state 208
    '('  shift, and go to state 209

    $default  reduce using rule 99 (exp)


state 175

   68 range: exp ':' "endpoint" .

    $default  reduce using rule 68 (range)


state 176

   67 range: exp ':' exp .
   69      | exp ':' exp . ':' exp
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    ':'   shift, and go to state 210
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 67 (range)


state 177

   63 matrix: matrix ';' vector .
   65 vector: vector . exp_range
   66       | vector . ',' exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    ','           shift, and go to state 127
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    $default  reduce using rule 63 (matrix)

    range      go to state 54
    exp_range  go to state 129
    exp        go to state 60


state 178

   66 vector: vector ',' exp_range .

    $default  reduce using rule 66 (vector)


state 179

   95 assign: '[' vector ']' '=' . "identifier" '(' arg_list ')'

    "identifier"  shift, and go to state 211


state 180

  104 exp: '#' "identifier" '(' ')' .

    $default  reduce using rule 104 (exp)


state 181

   60 arg_list: arg_list . ',' arg
  105 exp: '#' "identifier" '(' arg_list . ')'

    ','  shift, and go to state 170
    ')'  shift, and go to state 212


state 182

  121 exp: exp '@' exp '|' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 213


state 183

  103 exp: "identifier" '(' arg_list ')' .

    $default  reduce using rule 103 (exp)


state 184

  106 exp: "identifier" '(' exp '~' . exp ')'
  107    | "identifier" '(' exp '~' . "endt" ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    "endt"        shift, and go to state 205
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 214


state 185

   99 exp: "identifier" '{' exp '}' .
  100    | "identifier" '{' exp '}' . '(' exp ')'

    '('  shift, and go to state 215

    '('       [reduce using rule 99 (exp)]
    $default  reduce using rule 99 (exp)


state 186

   23 stmt: "if" condition block elseif_list "else" . block "end"

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    block      go to state 216
    line       go to state 93
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 187

   37 elseif_list: elseif_list "elseif" . condition block

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 17
    '['           shift, and go to state 32
    '~'           shift, and go to state 19
    '#'           shift, and go to state 20

    condition  go to state 217
    exp        go to state 34


state 188

   22 stmt: "if" condition block elseif_list "end" .

    $default  reduce using rule 22 (stmt)


state 189

   28 stmt: "for" "identifier" '=' exp_range ',' . block "end"

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    block      go to state 218
    line       go to state 93
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 190

    6 block: block . line
   27 stmt: "for" "identifier" '=' exp_range block . "end"

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "end"          shift, and go to state 219
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    line       go to state 155
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 191

   41 case_list: case_list "case" '{' . arg_list '}' block

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '{'           shift, and go to state 103
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    arg        go to state 109
    arg_list   go to state 220
    range      go to state 54
    exp_range  go to state 111
    exp        go to state 60
    initcell   go to state 113


state 192

   40 case_list: case_list "case" exp . "end of line" block
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    "end of line"  shift, and go to state 221
    ">>"           shift, and go to state 72
    "<<"           shift, and go to state 73
    "++"           shift, and go to state 74
    '-'            shift, and go to state 81
    '+'            shift, and go to state 82
    '$'            shift, and go to state 83
    '%'            shift, and go to state 84
    '@'            shift, and go to state 85
    '*'            shift, and go to state 86
    '/'            shift, and go to state 87
    '^'            shift, and go to state 88


state 193

    6 block: block . line
   25 stmt: "switch" exp case_list "otherwise" block . "end"

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "end"          shift, and go to state 222
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    line       go to state 155
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 194

   33 funcdef: "function" "identifier" '=' "identifier" '(' . id_list ')' block func_end

    "identifier"  shift, and go to state 163

    $default  reduce using rule 52 (id_list)

    id_list  go to state 223


state 195

   54 id_list: "identifier" '{' . '}'

    '}'  shift, and go to state 224


state 196

   55 id_list: id_list ',' . "identifier"
   56        | id_list ',' . "identifier" '{' '}'

    "identifier"  shift, and go to state 225


state 197

   32 funcdef: "function" "identifier" '(' id_list ')' . block func_end

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    block      go to state 226
    line       go to state 93
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 198

   34 funcdef: "function" "identifier" '{' '}' '=' . "identifier" '(' id_list ')' block func_end

    "identifier"  shift, and go to state 227


state 199

   35 funcdef: "function" '[' vector ']' '=' . "identifier" '(' id_list ')' block func_end

    "identifier"  shift, and go to state 228


state 200

  112 exp: "sigma" '(' "identifier" '=' exp_range . ',' exp ')'

    ','  shift, and go to state 229


state 201

  127 initcell: '{' arg_list '}' .

    $default  reduce using rule 127 (initcell)


state 202

  108 exp: "identifier" '(' "endt" '~' exp . ')'
  113    | exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88
    ')'   shift, and go to state 230


state 203

   60 arg_list: arg_list ',' arg .

    $default  reduce using rule 60 (arg_list)


state 204

   87 assign: "identifier" '(' arg_list ')' '=' . exp_range
   91       | "identifier" '(' arg_list ')' '=' . assign

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 14
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 18
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 231
    assign     go to state 232
    exp        go to state 60


state 205

  107 exp: "identifier" '(' exp '~' "endt" . ')'

    ')'  shift, and go to state 233


state 206

   80 assign: "identifier" '(' exp '~' exp . ')' '=' exp
   81       | "identifier" '(' exp '~' exp . ')' "+=" exp_range
   82       | "identifier" '(' exp '~' exp . ')' "-=" exp_range
   83       | "identifier" '(' exp '~' exp . ')' "*=" exp_range
   84       | "identifier" '(' exp '~' exp . ')' "/=" exp_range
   85       | "identifier" '(' exp '~' exp . ')' "@=" exp_range
   86       | "identifier" '(' exp '~' exp . ')' "@@=" exp_range
  106 exp: "identifier" '(' exp '~' exp . ')'
  113    | exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88
    ')'   shift, and go to state 234


state 207

   94 assign: "identifier" '{' '}' '=' "identifier" . '(' arg_list ')'

    '('  shift, and go to state 235


state 208

   79 assign: "identifier" '{' exp '}' '=' . exp_range
   90       | "identifier" '{' exp '}' '=' . assign

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 14
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 18
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 236
    assign     go to state 237
    exp        go to state 60


state 209

   88 assign: "identifier" '{' exp '}' '(' . exp ')' '=' exp_range
   92       | "identifier" '{' exp '}' '(' . exp ')' '=' assign
  100 exp: "identifier" '{' exp '}' '(' . exp ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 238


state 210

   69 range: exp ':' exp ':' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 239


state 211

   95 assign: '[' vector ']' '=' "identifier" . '(' arg_list ')'

    '('  shift, and go to state 240


state 212

  105 exp: '#' "identifier" '(' arg_list ')' .

    $default  reduce using rule 105 (exp)


state 213

  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  121    | exp '@' exp '|' exp .
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    ">>"      [reduce using rule 121 (exp)]
    "<<"      [reduce using rule 121 (exp)]
    "++"      [reduce using rule 121 (exp)]
    '-'       [reduce using rule 121 (exp)]
    '+'       [reduce using rule 121 (exp)]
    '$'       [reduce using rule 121 (exp)]
    '%'       [reduce using rule 121 (exp)]
    '@'       [reduce using rule 121 (exp)]
    '*'       [reduce using rule 121 (exp)]
    '/'       [reduce using rule 121 (exp)]
    '^'       [reduce using rule 121 (exp)]
    $default  reduce using rule 121 (exp)


state 214

  106 exp: "identifier" '(' exp '~' exp . ')'
  113    | exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88
    ')'   shift, and go to state 241


state 215

  100 exp: "identifier" '{' exp '}' '(' . exp ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 242


state 216

    6 block: block . line
   23 stmt: "if" condition block elseif_list "else" block . "end"

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "end"          shift, and go to state 243
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    line       go to state 155
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 217

   37 elseif_list: elseif_list "elseif" condition . block
   50 condition: condition . "&&" condition
   51          | condition . "||" condition

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "&&"           shift, and go to state 70
    "||"           shift, and go to state 71
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    block      go to state 244
    line       go to state 93
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 218

    6 block: block . line
   28 stmt: "for" "identifier" '=' exp_range ',' block . "end"

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "end"          shift, and go to state 245
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    line       go to state 155
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 219

   27 stmt: "for" "identifier" '=' exp_range block "end" .

    $default  reduce using rule 27 (stmt)


state 220

   41 case_list: case_list "case" '{' arg_list . '}' block
   60 arg_list: arg_list . ',' arg

    ','  shift, and go to state 170
    '}'  shift, and go to state 246


state 221

   40 case_list: case_list "case" exp "end of line" . block

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    block      go to state 247
    line       go to state 93
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 222

   25 stmt: "switch" exp case_list "otherwise" block "end" .

    $default  reduce using rule 25 (stmt)


state 223

   33 funcdef: "function" "identifier" '=' "identifier" '(' id_list . ')' block func_end
   55 id_list: id_list . ',' "identifier"
   56        | id_list . ',' "identifier" '{' '}'

    ','  shift, and go to state 196
    ')'  shift, and go to state 248


state 224

   54 id_list: "identifier" '{' '}' .

    $default  reduce using rule 54 (id_list)


state 225

   55 id_list: id_list ',' "identifier" .
   56        | id_list ',' "identifier" . '{' '}'

    '{'  shift, and go to state 249

    $default  reduce using rule 55 (id_list)


state 226

    6 block: block . line
   32 funcdef: "function" "identifier" '(' id_list ')' block . func_end

    "end of text"  shift, and go to state 250
    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "endfunction"  shift, and go to state 251
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    "end of text"  [reduce using rule 16 (func_end)]
    error          [reduce using rule 16 (func_end)]
    "end of line"  [reduce using rule 16 (func_end)]
    "if"           [reduce using rule 16 (func_end)]
    "while"        [reduce using rule 16 (func_end)]
    "for"          [reduce using rule 16 (func_end)]
    "break"        [reduce using rule 16 (func_end)]
    "continue"     [reduce using rule 16 (func_end)]
    "switch"       [reduce using rule 16 (func_end)]
    "function"     reduce using rule 16 (func_end)
    "return"       [reduce using rule 16 (func_end)]
    "sigma"        [reduce using rule 16 (func_end)]
    "number"       [reduce using rule 16 (func_end)]
    "string"       [reduce using rule 16 (func_end)]
    "identifier"   [reduce using rule 16 (func_end)]
    '-'            [reduce using rule 16 (func_end)]
    '+'            [reduce using rule 16 (func_end)]
    '('            [reduce using rule 16 (func_end)]
    '['            [reduce using rule 16 (func_end)]
    '~'            [reduce using rule 16 (func_end)]
    '#'            [reduce using rule 16 (func_end)]

    line       go to state 155
    func_end   go to state 252
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 227

   34 funcdef: "function" "identifier" '{' '}' '=' "identifier" . '(' id_list ')' block func_end

    '('  shift, and go to state 253


state 228

   35 funcdef: "function" '[' vector ']' '=' "identifier" . '(' id_list ')' block func_end

    '('  shift, and go to state 254


state 229

  112 exp: "sigma" '(' "identifier" '=' exp_range ',' . exp ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 255


state 230

  108 exp: "identifier" '(' "endt" '~' exp ')' .

    $default  reduce using rule 108 (exp)


state 231

   87 assign: "identifier" '(' arg_list ')' '=' exp_range .

    $default  reduce using rule 87 (assign)


state 232

   91 assign: "identifier" '(' arg_list ')' '=' assign .

    $default  reduce using rule 91 (assign)


state 233

  107 exp: "identifier" '(' exp '~' "endt" ')' .

    $default  reduce using rule 107 (exp)


state 234

   80 assign: "identifier" '(' exp '~' exp ')' . '=' exp
   81       | "identifier" '(' exp '~' exp ')' . "+=" exp_range
   82       | "identifier" '(' exp '~' exp ')' . "-=" exp_range
   83       | "identifier" '(' exp '~' exp ')' . "*=" exp_range
   84       | "identifier" '(' exp '~' exp ')' . "/=" exp_range
   85       | "identifier" '(' exp '~' exp ')' . "@=" exp_range
   86       | "identifier" '(' exp '~' exp ')' . "@@=" exp_range
  106 exp: "identifier" '(' exp '~' exp ')' .

    '='    shift, and go to state 256
    "+="   shift, and go to state 257
    "-="   shift, and go to state 258
    "*="   shift, and go to state 259
    "/="   shift, and go to state 260
    "@="   shift, and go to state 261
    "@@="  shift, and go to state 262

    $default  reduce using rule 106 (exp)


state 235

   94 assign: "identifier" '{' '}' '=' "identifier" '(' . arg_list ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '{'           shift, and go to state 103
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    arg        go to state 109
    arg_list   go to state 263
    range      go to state 54
    exp_range  go to state 111
    exp        go to state 60
    initcell   go to state 113


state 236

   79 assign: "identifier" '{' exp '}' '=' exp_range .

    $default  reduce using rule 79 (assign)


state 237

   90 assign: "identifier" '{' exp '}' '=' assign .

    $default  reduce using rule 90 (assign)


state 238

   88 assign: "identifier" '{' exp '}' '(' exp . ')' '=' exp_range
   92       | "identifier" '{' exp '}' '(' exp . ')' '=' assign
  100 exp: "identifier" '{' exp '}' '(' exp . ')'
  113    | exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88
    ')'   shift, and go to state 264


state 239

   69 range: exp ':' exp ':' exp .
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 69 (range)


state 240

   95 assign: '[' vector ']' '=' "identifier" '(' . arg_list ')'

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '{'           shift, and go to state 103
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    arg        go to state 109
    arg_list   go to state 265
    range      go to state 54
    exp_range  go to state 111
    exp        go to state 60
    initcell   go to state 113


state 241

  106 exp: "identifier" '(' exp '~' exp ')' .

    $default  reduce using rule 106 (exp)


state 242

  100 exp: "identifier" '{' exp '}' '(' exp . ')'
  113    | exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88
    ')'   shift, and go to state 266


state 243

   23 stmt: "if" condition block elseif_list "else" block "end" .

    $default  reduce using rule 23 (stmt)


state 244

    6 block: block . line
   37 elseif_list: elseif_list "elseif" condition block .

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    "else"    reduce using rule 37 (elseif_list)
    "elseif"  reduce using rule 37 (elseif_list)
    "end"     reduce using rule 37 (elseif_list)

    line       go to state 155
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 245

   28 stmt: "for" "identifier" '=' exp_range ',' block "end" .

    $default  reduce using rule 28 (stmt)


state 246

   41 case_list: case_list "case" '{' arg_list '}' . block

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    block      go to state 267
    line       go to state 93
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 247

    6 block: block . line
   40 case_list: case_list "case" exp "end of line" block .

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    "end"        reduce using rule 40 (case_list)
    "case"       reduce using rule 40 (case_list)
    "otherwise"  reduce using rule 40 (case_list)

    line       go to state 155
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 248

   33 funcdef: "function" "identifier" '=' "identifier" '(' id_list ')' . block func_end

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    block      go to state 268
    line       go to state 93
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 249

   56 id_list: id_list ',' "identifier" '{' . '}'

    '}'  shift, and go to state 269


state 250

   18 func_end: "end of text" .

    $default  reduce using rule 18 (func_end)


state 251

   17 func_end: "endfunction" .

    $default  reduce using rule 17 (func_end)


state 252

   32 funcdef: "function" "identifier" '(' id_list ')' block func_end .

    $default  reduce using rule 32 (funcdef)


state 253

   34 funcdef: "function" "identifier" '{' '}' '=' "identifier" '(' . id_list ')' block func_end

    "identifier"  shift, and go to state 163

    $default  reduce using rule 52 (id_list)

    id_list  go to state 270


state 254

   35 funcdef: "function" '[' vector ']' '=' "identifier" '(' . id_list ')' block func_end

    "identifier"  shift, and go to state 163

    $default  reduce using rule 52 (id_list)

    id_list  go to state 271


state 255

  112 exp: "sigma" '(' "identifier" '=' exp_range ',' exp . ')'
  113    | exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88
    ')'   shift, and go to state 272


state 256

   80 assign: "identifier" '(' exp '~' exp ')' '=' . exp

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    exp  go to state 273


state 257

   81 assign: "identifier" '(' exp '~' exp ')' "+=" . exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 274
    exp        go to state 60


state 258

   82 assign: "identifier" '(' exp '~' exp ')' "-=" . exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 275
    exp        go to state 60


state 259

   83 assign: "identifier" '(' exp '~' exp ')' "*=" . exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 276
    exp        go to state 60


state 260

   84 assign: "identifier" '(' exp '~' exp ')' "/=" . exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 277
    exp        go to state 60


state 261

   85 assign: "identifier" '(' exp '~' exp ')' "@=" . exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 278
    exp        go to state 60


state 262

   86 assign: "identifier" '(' exp '~' exp ')' "@@=" . exp_range

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 31
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 32
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 279
    exp        go to state 60


state 263

   60 arg_list: arg_list . ',' arg
   94 assign: "identifier" '{' '}' '=' "identifier" '(' arg_list . ')'

    ','  shift, and go to state 170
    ')'  shift, and go to state 280


state 264

   88 assign: "identifier" '{' exp '}' '(' exp ')' . '=' exp_range
   92       | "identifier" '{' exp '}' '(' exp ')' . '=' assign
  100 exp: "identifier" '{' exp '}' '(' exp ')' .

    '='  shift, and go to state 281

    $default  reduce using rule 100 (exp)


state 265

   60 arg_list: arg_list . ',' arg
   95 assign: '[' vector ']' '=' "identifier" '(' arg_list . ')'

    ','  shift, and go to state 170
    ')'  shift, and go to state 282


state 266

  100 exp: "identifier" '{' exp '}' '(' exp ')' .

    $default  reduce using rule 100 (exp)


state 267

    6 block: block . line
   41 case_list: case_list "case" '{' arg_list '}' block .

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    "end"        reduce using rule 41 (case_list)
    "case"       reduce using rule 41 (case_list)
    "otherwise"  reduce using rule 41 (case_list)

    line       go to state 155
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 268

    6 block: block . line
   33 funcdef: "function" "identifier" '=' "identifier" '(' id_list ')' block . func_end

    "end of text"  shift, and go to state 250
    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "endfunction"  shift, and go to state 251
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    "end of text"  [reduce using rule 16 (func_end)]
    error          [reduce using rule 16 (func_end)]
    "end of line"  [reduce using rule 16 (func_end)]
    "if"           [reduce using rule 16 (func_end)]
    "while"        [reduce using rule 16 (func_end)]
    "for"          [reduce using rule 16 (func_end)]
    "break"        [reduce using rule 16 (func_end)]
    "continue"     [reduce using rule 16 (func_end)]
    "switch"       [reduce using rule 16 (func_end)]
    "function"     reduce using rule 16 (func_end)
    "return"       [reduce using rule 16 (func_end)]
    "sigma"        [reduce using rule 16 (func_end)]
    "number"       [reduce using rule 16 (func_end)]
    "string"       [reduce using rule 16 (func_end)]
    "identifier"   [reduce using rule 16 (func_end)]
    '-'            [reduce using rule 16 (func_end)]
    '+'            [reduce using rule 16 (func_end)]
    '('            [reduce using rule 16 (func_end)]
    '['            [reduce using rule 16 (func_end)]
    '~'            [reduce using rule 16 (func_end)]
    '#'            [reduce using rule 16 (func_end)]

    line       go to state 155
    func_end   go to state 283
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 269

   56 id_list: id_list ',' "identifier" '{' '}' .

    $default  reduce using rule 56 (id_list)


state 270

   34 funcdef: "function" "identifier" '{' '}' '=' "identifier" '(' id_list . ')' block func_end
   55 id_list: id_list . ',' "identifier"
   56        | id_list . ',' "identifier" '{' '}'

    ','  shift, and go to state 196
    ')'  shift, and go to state 284


state 271

   35 funcdef: "function" '[' vector ']' '=' "identifier" '(' id_list . ')' block func_end
   55 id_list: id_list . ',' "identifier"
   56        | id_list . ',' "identifier" '{' '}'

    ','  shift, and go to state 196
    ')'  shift, and go to state 285


state 272

  112 exp: "sigma" '(' "identifier" '=' exp_range ',' exp ')' .

    $default  reduce using rule 112 (exp)


state 273

   80 assign: "identifier" '(' exp '~' exp ')' '=' exp .
  113 exp: exp . '+' exp
  114    | exp . '-' exp
  115    | exp . '*' exp
  116    | exp . '/' exp
  117    | exp . '^' exp
  118    | exp . '%' exp
  119    | exp . '$' exp
  120    | exp . '@' exp
  121    | exp . '@' exp '|' exp
  122    | exp . ">>" exp
  123    | exp . "<<" exp
  124    | exp . "++" exp

    ">>"  shift, and go to state 72
    "<<"  shift, and go to state 73
    "++"  shift, and go to state 74
    '-'   shift, and go to state 81
    '+'   shift, and go to state 82
    '$'   shift, and go to state 83
    '%'   shift, and go to state 84
    '@'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87
    '^'   shift, and go to state 88

    $default  reduce using rule 80 (assign)


state 274

   81 assign: "identifier" '(' exp '~' exp ')' "+=" exp_range .

    $default  reduce using rule 81 (assign)


state 275

   82 assign: "identifier" '(' exp '~' exp ')' "-=" exp_range .

    $default  reduce using rule 82 (assign)


state 276

   83 assign: "identifier" '(' exp '~' exp ')' "*=" exp_range .

    $default  reduce using rule 83 (assign)


state 277

   84 assign: "identifier" '(' exp '~' exp ')' "/=" exp_range .

    $default  reduce using rule 84 (assign)


state 278

   85 assign: "identifier" '(' exp '~' exp ')' "@=" exp_range .

    $default  reduce using rule 85 (assign)


state 279

   86 assign: "identifier" '(' exp '~' exp ')' "@@=" exp_range .

    $default  reduce using rule 86 (assign)


state 280

   94 assign: "identifier" '{' '}' '=' "identifier" '(' arg_list ')' .

    $default  reduce using rule 94 (assign)


state 281

   88 assign: "identifier" '{' exp '}' '(' exp ')' '=' . exp_range
   92       | "identifier" '{' exp '}' '(' exp ')' '=' . assign

    "sigma"       shift, and go to state 11
    "number"      shift, and go to state 12
    "string"      shift, and go to state 13
    "identifier"  shift, and go to state 14
    '-'           shift, and go to state 15
    '+'           shift, and go to state 16
    '('           shift, and go to state 37
    '['           shift, and go to state 18
    '#'           shift, and go to state 20

    range      go to state 54
    exp_range  go to state 286
    assign     go to state 287
    exp        go to state 60


state 282

   95 assign: '[' vector ']' '=' "identifier" '(' arg_list ')' .

    $default  reduce using rule 95 (assign)


state 283

   33 funcdef: "function" "identifier" '=' "identifier" '(' id_list ')' block func_end .

    $default  reduce using rule 33 (funcdef)


state 284

   34 funcdef: "function" "identifier" '{' '}' '=' "identifier" '(' id_list ')' . block func_end

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    block      go to state 288
    line       go to state 93
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 285

   35 funcdef: "function" '[' vector ']' '=' "identifier" '(' id_list ')' . block func_end

    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    block      go to state 289
    line       go to state 93
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 286

   88 assign: "identifier" '{' exp '}' '(' exp ')' '=' exp_range .

    $default  reduce using rule 88 (assign)


state 287

   92 assign: "identifier" '{' exp '}' '(' exp ')' '=' assign .

    $default  reduce using rule 92 (assign)


state 288

    6 block: block . line
   34 funcdef: "function" "identifier" '{' '}' '=' "identifier" '(' id_list ')' block . func_end

    "end of text"  shift, and go to state 250
    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "endfunction"  shift, and go to state 251
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    "end of text"  [reduce using rule 16 (func_end)]
    error          [reduce using rule 16 (func_end)]
    "end of line"  [reduce using rule 16 (func_end)]
    "if"           [reduce using rule 16 (func_end)]
    "while"        [reduce using rule 16 (func_end)]
    "for"          [reduce using rule 16 (func_end)]
    "break"        [reduce using rule 16 (func_end)]
    "continue"     [reduce using rule 16 (func_end)]
    "switch"       [reduce using rule 16 (func_end)]
    "function"     reduce using rule 16 (func_end)
    "return"       [reduce using rule 16 (func_end)]
    "sigma"        [reduce using rule 16 (func_end)]
    "number"       [reduce using rule 16 (func_end)]
    "string"       [reduce using rule 16 (func_end)]
    "identifier"   [reduce using rule 16 (func_end)]
    '-'            [reduce using rule 16 (func_end)]
    '+'            [reduce using rule 16 (func_end)]
    '('            [reduce using rule 16 (func_end)]
    '['            [reduce using rule 16 (func_end)]
    '~'            [reduce using rule 16 (func_end)]
    '#'            [reduce using rule 16 (func_end)]

    line       go to state 155
    func_end   go to state 290
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 289

    6 block: block . line
   35 funcdef: "function" '[' vector ']' '=' "identifier" '(' id_list ')' block . func_end

    "end of text"  shift, and go to state 250
    error          shift, and go to state 1
    "end of line"  shift, and go to state 2
    "if"           shift, and go to state 3
    "while"        shift, and go to state 4
    "for"          shift, and go to state 5
    "break"        shift, and go to state 6
    "continue"     shift, and go to state 7
    "switch"       shift, and go to state 8
    "endfunction"  shift, and go to state 251
    "return"       shift, and go to state 10
    "sigma"        shift, and go to state 11
    "number"       shift, and go to state 12
    "string"       shift, and go to state 13
    "identifier"   shift, and go to state 14
    '-'            shift, and go to state 15
    '+'            shift, and go to state 16
    '('            shift, and go to state 17
    '['            shift, and go to state 18
    '~'            shift, and go to state 19
    '#'            shift, and go to state 20

    "end of text"  [reduce using rule 16 (func_end)]
    error          [reduce using rule 16 (func_end)]
    "end of line"  [reduce using rule 16 (func_end)]
    "if"           [reduce using rule 16 (func_end)]
    "while"        [reduce using rule 16 (func_end)]
    "for"          [reduce using rule 16 (func_end)]
    "break"        [reduce using rule 16 (func_end)]
    "continue"     [reduce using rule 16 (func_end)]
    "switch"       [reduce using rule 16 (func_end)]
    "function"     reduce using rule 16 (func_end)
    "return"       [reduce using rule 16 (func_end)]
    "sigma"        [reduce using rule 16 (func_end)]
    "number"       [reduce using rule 16 (func_end)]
    "string"       [reduce using rule 16 (func_end)]
    "identifier"   [reduce using rule 16 (func_end)]
    '-'            [reduce using rule 16 (func_end)]
    '+'            [reduce using rule 16 (func_end)]
    '('            [reduce using rule 16 (func_end)]
    '['            [reduce using rule 16 (func_end)]
    '~'            [reduce using rule 16 (func_end)]
    '#'            [reduce using rule 16 (func_end)]

    line       go to state 155
    func_end   go to state 291
    stmt       go to state 25
    condition  go to state 27
    assign     go to state 28
    exp        go to state 29


state 290

   34 funcdef: "function" "identifier" '{' '}' '=' "identifier" '(' id_list ')' block func_end .

    $default  reduce using rule 34 (funcdef)


state 291

   35 funcdef: "function" '[' vector ']' '=' "identifier" '(' id_list ')' block func_end .

    $default  reduce using rule 35 (funcdef)
